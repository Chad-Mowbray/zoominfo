{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","title","fileResponse","fetchFileResp","file","a","fd","FormData","append","fetch","method","body","response","json","respJson","setState","onChangeHandler","event","console","log","target","files","res","resJson","this","className","type","name","onChange","JSON","stringify","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA+CeA,G,kNA1CbC,MAAQ,CACNC,MAAO,aACPC,aAAc,I,EAGhBC,c,uCAAgB,WAAOC,GAAP,mBAAAC,EAAA,6DACRC,EAAK,IAAIC,UACZC,OAAO,OAAQJ,GAFJ,SAGOK,MAAM,8CAA+C,CAClCC,OAAQ,OACRC,KAAML,IALhC,cAGVM,EAHU,gBAOOA,EAASC,OAPhB,OAOVC,EAPU,OAQd,EAAKC,SAAS,CAACb,aAAcY,IARf,2C,wDAahBE,gBAAkB,SAAAC,GAEhBC,QAAQC,IAAIF,EAAMG,OAAOC,MAAM,IAC/B,EAAKlB,cAAcc,EAAMG,OAAOC,MAAM,K,oMAKtBZ,MAAM,gD,cAAlBa,E,gBACgBA,EAAIT,O,OAApBU,E,OACJC,KAAKT,SAAS,CAACd,MAAOsB,EAAQtB,Q,qIAG9B,OACE,sBAAKwB,UAAU,MAAf,UACE,2EACA,qDAAwBD,KAAKxB,MAAMC,SACnC,uBAAOyB,KAAK,OAAOC,KAAK,OAAOC,SAAUJ,KAAKR,kBAC9C,gDAAmBa,KAAKC,UAAUN,KAAKxB,MAAME,wB,GAtCnC6B,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c88d2de.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\n\nclass App extends React.Component {\n\n  state = {\n    title: \"loading...\",\n    fileResponse: ''\n  }\n\n  fetchFileResp = async (file) => {\n    const fd = new FormData();\n    fd.append('file', file);\n    let response = await fetch('https://zoom-data-back.herokuapp.com/upload', {\n                                            method: 'POST',\n                                            body: fd\n                                            })\n    let respJson = await response.json()\n    this.setState({fileResponse: respJson})\n\n  \n  }\n\n  onChangeHandler = event => {\n\n    console.log(event.target.files[0])\n    this.fetchFileResp(event.target.files[0])\n\n  }\n\n  async componentDidMount() {\n    let res = await fetch('https://jsonplaceholder.typicode.com/todos/1')\n    let resJson = await res.json()\n    this.setState({title: resJson.title})\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>This is a sample app to test github pages</h1>\n        <h2>Some loaded stuff: {this.state.title}</h2>\n        <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\n        <p>File Response: {JSON.stringify(this.state.fileResponse)}</p>\n\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}