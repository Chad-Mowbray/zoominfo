{"version":3,"sources":["components/Home.js","api/api.js","components/ShowZoom.js","components/Show.js","components/Upload.js","App.js","reportWebVitals.js","index.js"],"names":["Home","to","process","React","Component","postZoom","file","a","console","log","fd","FormData","append","fetch","method","body","response","json","respJson","ShowZoom","processData","props","displayData","temp","data","Monday","Tuesday","Wednesday","Thursday","Friday","dataArray","day","push","visitors","frameProps","this","size","type","oAccessor","rAccessor","style","fill","stroke","title","oLabel","axes","orient","label","textAnchor","Show","state","zoomFile","engagementFile","res","setState","JSON","stringify","Upload","zoomOrEngagement","match","params","name","onChange","onChangeHandlerZoom","onChangeHandlerEngagement","stuff","App","redirect","event","target","files","renderRedirect","path","component","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97e2f6ac.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\n\n\n\nclass Home extends React.Component {\n\n\n\n    render() {\n        return(\n           \n            <div>\n                <h1>Hello</h1>\n                <h3><Link to={process.env.PUBLIC_URL + \"/upload/zoom\"}>Upload your Zoom .csv</Link></h3>\n                <h3><Link to={process.env.PUBLIC_URL + \"/upload/engagement\"}>Upload your Engagement .csv</Link></h3>\n            </div>\n   \n        )\n    }\n}\n\nexport default Home","const BASE_URL = 'https://zoom-data-back.herokuapp.com/upload'\n\n\nconst postZoom = async (file) => {\n    console.log(\"postZoom api called\")\n    console.log(\"in postZoom, file: \", file)\n    const fd = new FormData();\n    fd.append('file', file);\n    let response = await fetch(BASE_URL, {\n                                            method: 'POST',\n                                            body: fd\n                                            })\n    let respJson = await response.json()\n    console.log(respJson)\n    return respJson\n}\n\nexport default postZoom\n\n\n\n","import OrdinalFrame from \"semiotic/lib/OrdinalFrame\"\nimport React from 'react'\n\n\nclass ShowZoom extends React.Component {\n\n    processData = () => {\n\n        console.log(this.props.displayData)\n        // console.log(this.props.displayData[\"0\"])\n        let temp = this.props.displayData\n\n        const data = {\n            Monday: temp[\"0\"],\n            Tuesday: temp[\"1\"],\n            Wednesday: temp[\"2\"],\n            Thursday: temp[\"3\"],\n            Friday: temp[\"4\"]\n        }\n\n        let dataArray = []\n        for(let day in data){\n            dataArray.push({\n                day: day,\n                visitors: data[day]\n            })\n        }\n        return dataArray\n    }\n\n\n    render() {\n        const processedData = this.processData()\n        \n        const frameProps = { \n            /* --- Data --- */\n              data: processedData,\n            \n            /* --- Size --- */\n              size: [500,500],\n            \n            /* --- Layout --- */\n              type: \"bar\",\n            \n            /* --- Process --- */\n              oAccessor: \"day\",\n              rAccessor: \"visitors\",\n            \n            /* --- Customize --- */\n              style: { fill: \"#ac58e5\", stroke: \"white\" },\n              title: \"Average VOH Clients per Day of Week\",\n            \n            /* --- Annotate --- */\n              oLabel: true,\n\n\n              axes: [{\n                orient: \"left\",\n                label: (\n                  <text textAnchor=\"middle\">\n                    <tspan fill={\"#ac58e5\"}>Number of Clients</tspan> \n\n                  </text>\n                )\n              }]\n            }\n\n\n\n        return(\n            <div>\n                 <OrdinalFrame {...frameProps} />\n            </div>\n           \n        )\n    }\n}\n\nexport default ShowZoom","import React from 'react'\nimport postZoom  from '../api/api'  \nimport ShowZoom from './ShowZoom'\n\n\n\nclass Show extends React.Component {\n\n    state = {\n        displayData: null\n    }\n\n\n    async componentDidMount() {\n        console.log(\"Show.js mounted\")\n\n        let file = ''\n        if(this.props.zoomFile) {\n            file = this.props.zoomFile\n        } else if (this.props.engagementFile) {\n            file = this.props.engagementFile\n        }\n\n        let res = await postZoom(file)\n        console.log(typeof res)\n        this.setState({displayData: res})\n\n    }\n\n\n    render() {\n        // console.log(\"in Show: \", this.props)\n        return(\n            <div> { this.state.displayData && \n                <div>\n                    <h1>In Show: {JSON.stringify(this.state.displayData)}</h1>\n                    <ShowZoom displayData={this.state.displayData}/>\n                </div>\n            }\n\n            </div>\n\n        )\n    }\n}\n\n\nexport default Show","import React from 'react'\n\n\n\nclass Upload extends React.Component {\n\n\n    zoomOrEngagement = () => {\n        const label = this.props.match.params.label\n        console.log(\"label: \", label)\n        if(label === \"zoom\") {\n            return  <div>\n                        <h1>Upload your Zoom .csv file here: </h1>\n                        <input type=\"file\" name=\"zoom\" onChange={this.props.onChangeHandlerZoom}/>\n                    </div>\n        } if(label === \"engagement\") {\n            return  <div>\n                        <h1>Upload your Engagement .csv file here: </h1>\n                        <input type=\"file\" name=\"zoom\" onChange={this.props.onChangeHandlerEngagement}/>\n                    </div>\n\n        }\n\n    }\n\n\n\n\n\n    render() {\n        console.log(this.props)\n\n        const stuff = this.zoomOrEngagement()\n        \n\n        return(\n           <h1>{stuff}</h1>\n\n        )\n    }\n}\n\n\nexport default Upload","import './App.css';\nimport React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Home from './components/Home'\nimport Show from './components/Show'\nimport postZoom  from './api/api'  \nimport Upload from './components/Upload'\n\n\nclass App extends React.Component {\n\n  state = {\n    redirect: false,\n    zoomFile: '',\n    engagementFile: ''\n  }\n\n\n  onChangeHandlerZoom = event => {\n    console.log(\"zoom\")\n    const zoomFile = event.target.files[0]\n    // console.log(zoomFile)\n    this.setState({zoomFile: zoomFile, redirect: true})\n\n  }\n\n  onChangeHandlerEngagement = event => {\n    // console.log(\"engagement\")\n    const engagementFile = event.target.files[0]\n    // console.log(engagementFile)\n    this.setState({engagementFile: engagementFile, redirect: true})\n  }\n\n  renderRedirect = () => {\n      let label = ''\n      if(this.state.zoomFile) {\n        label = \"zoom\"\n      } if(this.state.engagementFile) {\n        label = 'engagement'\n      }\n\n      if (this.state.redirect) {\n        return <Redirect to={`${process.env.PUBLIC_URL}/show/${label}`} />\n      }\n  }\n\n\n  render(){\n    return (\n      <div>\n\n        {this.renderRedirect()}\n        <Switch>\n            <Route path={process.env.PUBLIC_URL + \"/\"} component={Home} exact />\n            <Route path={process.env.PUBLIC_URL + \"/upload/:label\"} \n                    render={(props) => (\n                    <Upload {...props} onChangeHandlerZoom={this.onChangeHandlerZoom} onChangeHandlerEngagement={this.onChangeHandlerEngagement} />\n                    )}\n                     exact />\n            <Route path={process.env.PUBLIC_URL + \"/show/:label\"} \n                    render={(props) => (\n                    <Show {...props} zoomFile={this.state.zoomFile} engagementFile={this.state.engagementFile} />\n                    )}\n                    />\n          \n        </Switch>\n\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}